
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace GameConfig
{
public partial class TbMonsterGroupDesc
{
    public static TbMonsterGroupDesc Instance => ConfigSystem.Instance.Tables.TbMonsterGroupDesc;
    private readonly System.Collections.Generic.Dictionary<int, MonsterGroupDesc> _dataMap;
    private readonly System.Collections.Generic.List<MonsterGroupDesc> _dataList;
    
    public TbMonsterGroupDesc(ByteBuf _buf)
    {
        _dataMap = new System.Collections.Generic.Dictionary<int, MonsterGroupDesc>();
        _dataList = new System.Collections.Generic.List<MonsterGroupDesc>();
        
        for(int n = _buf.ReadSize() ; n > 0 ; --n)
        {
            MonsterGroupDesc _v;
            _v = MonsterGroupDesc.DeserializeMonsterGroupDesc(_buf);
            _dataList.Add(_v);
            _dataMap.Add(_v.Id, _v);
        }
    }

    public System.Collections.Generic.Dictionary<int, MonsterGroupDesc> DataMap => _dataMap;
    public System.Collections.Generic.List<MonsterGroupDesc> DataList => _dataList;

    public MonsterGroupDesc GetOrDefault(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
    public MonsterGroupDesc Get(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
    public MonsterGroupDesc this[int key] => _dataMap.TryGetValue(key, out var v) ? v : null;

    public void ResolveRef(Tables tables)
    {
        foreach(var _v in _dataList)
        {
            _v.ResolveRef(tables);
        }
    }

    

}

}
