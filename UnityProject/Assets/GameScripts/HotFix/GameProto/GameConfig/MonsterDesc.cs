
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace GameConfig
{
public sealed partial class MonsterDesc : Luban.BeanBase
{
    public MonsterDesc(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        ShowId = _buf.ReadInt();
        Radius = _buf.ReadFloat();
        Height = _buf.ReadFloat();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SkillIds = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); SkillIds.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SkillLevels = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); SkillLevels.Add(_e0);}}
        ShapeType = (GameLogic.Battle.ERoleShape)_buf.ReadInt();
        AiName = _buf.ReadString();
    }

    public static MonsterDesc DeserializeMonsterDesc(ByteBuf _buf)
    {
        return new MonsterDesc(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 表现id
    /// </summary>
    public readonly int ShowId;
    /// <summary>
    /// 半径
    /// </summary>
    public readonly float Radius;
    /// <summary>
    /// 高度
    /// </summary>
    public readonly float Height;
    /// <summary>
    /// 初始技能列表
    /// </summary>
    public readonly System.Collections.Generic.List<int> SkillIds;
    /// <summary>
    /// 初始技能等级
    /// </summary>
    public readonly System.Collections.Generic.List<int> SkillLevels;
    /// <summary>
    /// 形状
    /// </summary>
    public readonly GameLogic.Battle.ERoleShape ShapeType;
    public readonly string AiName;
   
    public const int __ID__ = -1086069397;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "showId:" + ShowId + ","
        + "radius:" + Radius + ","
        + "height:" + Height + ","
        + "skillIds:" + Luban.StringUtil.CollectionToString(SkillIds) + ","
        + "skillLevels:" + Luban.StringUtil.CollectionToString(SkillLevels) + ","
        + "shapeType:" + ShapeType + ","
        + "aiName:" + AiName + ","
        + "}";
    }
}

}
